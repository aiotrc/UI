<?php

namespace SmartCity\UserBundle\Entity\Repository;

use Doctrine\ORM\NoResultException;
use Doctrine\ORM\Query;
use SmartCity\UserBundle\Entity\Role;
use Doctrine\ORM\EntityRepository;

/**
 * RoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleRepository extends EntityRepository
{
    /**
     * Find a Role by Role String Name
     *
     * @param string $roleName
     * @return Role
     */
    public function findByRoleName($roleName)
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT r FROM SmartCityUserBundle:Role r WHERE r.role = :role')
            ->setParameter('role', $roleName);

        try {
            return $query->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function getActiveRoles()
    {
        $qb = $this->_em->createQueryBuilder('r');
        $qb
            ->select('r.id, r.title, r.role')
            ->from('SmartCityUserBundle:Role', 'r')
            ->where(
                $qb->expr()->like('r.visible', ':eq')
            )
            ->setParameter('eq',1)
            ->orderBy('r.id', 'asc')
        ;
        $result = $qb->getQuery()->getResult(Query::HYDRATE_ARRAY);
        return  $result;
    }
}
